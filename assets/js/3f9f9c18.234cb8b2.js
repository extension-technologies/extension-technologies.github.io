"use strict";(self.webpackChunkextention_technologies_docs=self.webpackChunkextention_technologies_docs||[]).push([[7433],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(n),d=o,h=m["".concat(s,".").concat(d)]||m[d]||u[d]||r;return n?a.createElement(h,l(l({ref:t},p),{},{components:n})):a.createElement(h,l({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var c=2;c<r;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6345:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var a=n(7462),o=n(3366),r=(n(7294),n(3905)),l=["components"],i={sidebar_position:3},s="React Native Paper",c={unversionedId:"React Native Starters/React Native Paper",id:"React Native Starters/React Native Paper",isDocsHomePage:!1,title:"React Native Paper",description:"Paper is a collection of customizable and production-ready components for React Native, following Google\u2019s Material Design guidelines.",source:"@site/docs/React Native Starters/React Native Paper.md",sourceDirName:"React Native Starters",slug:"/React Native Starters/React Native Paper",permalink:"/docs/React Native Starters/React Native Paper",editUrl:"https://github.com/extension-technologies/extension-technologies.github.io/docs/React Native Starters/React Native Paper.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"TypeScript Basics",permalink:"/docs/React Native Starters/TypeScript Basics"},next:{title:"React Native with TypeScript",permalink:"/docs/React Native Starters/React Native With TypeScript"}},p=[{value:"Installation",id:"installation",children:[]},{value:"ActivityIndicator",id:"activityindicator",children:[]},{value:"Appbar",id:"appbar",children:[]},{value:"Avatar",id:"avatar",children:[{value:"Avatar.Icon",id:"avataricon",children:[]},{value:"Avatar.Image",id:"avatarimage",children:[]},{value:"Avatar.Text",id:"avatartext",children:[]}]},{value:"Badge",id:"badge",children:[]},{value:"Banner",id:"banner",children:[]},{value:"BottomNavigation",id:"bottomnavigation",children:[]},{value:"Button",id:"button",children:[]},{value:"Card",id:"card",children:[]},{value:"Checkbox",id:"checkbox",children:[]},{value:"Chip",id:"chip",children:[]},{value:"DataTable",id:"datatable",children:[{value:"DataTableRow",id:"datatablerow",children:[]}]},{value:"Dialog",id:"dialog",children:[]},{value:"Divider",id:"divider",children:[]},{value:"Drawer",id:"drawer",children:[{value:"Drawer.Section",id:"drawersection",children:[]}]},{value:"FAB",id:"fab",children:[]},{value:"HelperText",id:"helpertext",children:[]},{value:"IconButton",id:"iconbutton",children:[]},{value:"List",id:"list",children:[{value:"List.Accordion",id:"listaccordion",children:[]}]},{value:"Menu",id:"menu",children:[]},{value:"Modal",id:"modal",children:[]},{value:"Portal",id:"portal",children:[]},{value:"ProgressBar",id:"progressbar",children:[]},{value:"RadioButton",id:"radiobutton",children:[]},{value:"Searchbar",id:"searchbar",children:[]},{value:"Snackbar",id:"snackbar",children:[]},{value:"Surface",id:"surface",children:[]},{value:"Switch",id:"switch",children:[]},{value:"TextInput",id:"textinput",children:[]},{value:"ToggleButton",id:"togglebutton",children:[{value:"ToggleButton.Group",id:"togglebuttongroup",children:[]},{value:"ToggleButton.Row",id:"togglebuttonrow",children:[]}]},{value:"TouchableRipple",id:"touchableripple",children:[]}],u={toc:p};function m(e){var t=e.components,n=(0,o.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"react-native-paper"},"React Native Paper"),(0,r.kt)("p",null,"Paper is a collection of customizable and production-ready components for React Native, following Google\u2019s Material Design guidelines."),(0,r.kt)("p",null,"Try the demo on Snack, iOS or Android."),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"Open a Terminal in your project's folder and run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add react-native-paper\n")),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install react-native-paper\n")),(0,r.kt)("p",null,"You Can Try All these example on ",(0,r.kt)("a",{parentName:"p",href:"https://snack.expo.dev/"},"Snack")," "),(0,r.kt)("h2",{id:"activityindicator"},"ActivityIndicator"),(0,r.kt)("p",null,"Activity indicator is used to present progress of some activity in the app. It can be used as a drop-in for the ActivityIndicator shipped with React Native."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { ActivityIndicator, Colors } from 'react-native-paper';\n\nconst MyComponent = () => (\n  <ActivityIndicator animating={true} color={Colors.red800} />\n);\n\nexport default MyComponent;\n")),(0,r.kt)("h2",{id:"appbar"},"Appbar"),(0,r.kt)("p",null,"A component to display action items in a bar. It can be placed at the top or bottom. The top bar usually contains the screen title, controls such as navigation buttons, menu button etc. The bottom bar usually provides access to a drawer and up to four actions."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/appbar.png",alt:"GitHub Logo"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { Appbar } from 'react-native-paper';\nimport { StyleSheet } from 'react-native';\n\nconst MyComponent = () => (\n <Appbar style={styles.bottom}>\n   <Appbar.Action\n     icon=\"archive\"\n     onPress={() => console.log('Pressed archive')}\n    />\n    <Appbar.Action icon=\"mail\" onPress={() => console.log('Pressed mail')} />\n    <Appbar.Action icon=\"label\" onPress={() => console.log('Pressed label')} />\n    <Appbar.Action\n      icon=\"delete\"\n      onPress={() => console.log('Pressed delete')}\n    />\n  </Appbar>\n );\n\nexport default MyComponent\n\nconst styles = StyleSheet.create({\n  bottom: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n")),(0,r.kt)("h2",{id:"avatar"},"Avatar"),(0,r.kt)("h3",{id:"avataricon"},"Avatar.Icon"),(0,r.kt)("p",null,"Avatars can be used to represent people in a graphical way.\n",(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/avatar-icon.png",alt:null}),"\nExample:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { Avatar } from 'react-native-paper';\n\nconst MyComponent = () => (\n  <Avatar.Icon size={24} icon=\"folder\" />\n);\n")),(0,r.kt)("h3",{id:"avatarimage"},"Avatar.Image"),(0,r.kt)("p",null,"Avatars can be used to represent people in a graphical way.\n",(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/avatar-image.png",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { Avatar } from 'react-native-paper';\n\nconst MyComponent = () => (\n  <Avatar.Image size={24} source={require('../assets/avatar.png')} />\n);\nexport default MyComponent\n")),(0,r.kt)("h3",{id:"avatartext"},"Avatar.Text"),(0,r.kt)("p",null,"Avatars can be used to represent people in a graphical way."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/avatar-text.png",alt:null}),"\\"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { Avatar } from 'react-native-paper';\n\nconst MyComponent = () => (\n  <Avatar.Text size={24} label=\"XD\" />\n);\n")),(0,r.kt)("h2",{id:"badge"},"Badge"),(0,r.kt)("p",null,"Badges are small status descriptors for UI elements. A badge consists of a small circle, typically containing a number or other short set of characters, that appears in proximity to another object."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/badge-1.png",alt:null})),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { Badge } from 'react-native-paper';\n\nconst MyComponent = () => (\n  <Badge>3</Badge>\n);\n\nexport default MyComponent;\n")),(0,r.kt)("h2",{id:"banner"},"Banner"),(0,r.kt)("p",null,"Banner displays a prominent message and related actions.\n",(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/banner.gif",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { Image } from 'react-native';\nimport { Banner } from 'react-native-paper';\n\nconst MyComponent = () => {\n  const [visible, setVisible] = React.useState(true);\n\n  return (\n    <Banner\n      visible={visible}\n      actions={[\n        {\n          label: 'Fix it',\n          onPress: () => setVisible(false),\n        },\n        {\n          label: 'Learn more',\n          onPress: () => setVisible(false),\n        },\n      ]}\n      icon={({size}) => (\n        <Image\n          source={{\n            uri: 'https://avatars3.githubusercontent.com/u/17571969?s=400&v=4',\n          }}\n          style={{\n            width: size,\n            height: size,\n          }}\n        />\n      )}>\n      There was a problem processing a transaction on your credit card.\n    </Banner>\n  );\n};\n\nexport default MyComponent;\n\n")),(0,r.kt)("h2",{id:"bottomnavigation"},"BottomNavigation"),(0,r.kt)("p",null,"Bottom navigation provides quick navigation between top-level views of an app with a bottom navigation bar. It is primarily designed for use on mobile."),(0,r.kt)("p",null,"For integration with React Navigation, you can use react-navigation-material-bottom-tabs and consult createMaterialBottomTabNavigator documentation."),(0,r.kt)("p",null,"By default Bottom navigation uses primary color as a background, in dark theme with adaptive mode it will use surface colour instead. "),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/bottom-navigation.gif",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { BottomNavigation, Text } from 'react-native-paper';\n\nconst MusicRoute = () => <Text>Music</Text>;\n\nconst AlbumsRoute = () => <Text>Albums</Text>;\n\nconst RecentsRoute = () => <Text>Recents</Text>;\n\nconst MyComponent = () => {\n  const [index, setIndex] = React.useState(0);\n  const [routes] = React.useState([\n    { key: 'music', title: 'Music', icon: 'queue-music' },\n    { key: 'albums', title: 'Albums', icon: 'album' },\n    { key: 'recents', title: 'Recents', icon: 'history' },\n  ]);\n\n  const renderScene = BottomNavigation.SceneMap({\n    music: MusicRoute,\n    albums: AlbumsRoute,\n    recents: RecentsRoute,\n  });\n\n  return (\n    <BottomNavigation\n      navigationState={{ index, routes }}\n      onIndexChange={setIndex}\n      renderScene={renderScene}\n    />\n  );\n};\n\nexport default MyComponent;\n")),(0,r.kt)("h2",{id:"button"},"Button"),(0,r.kt)("p",null,"A button is component that the user can press to trigger an action.\n",(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/button-3.png",alt:null})),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { Button } from 'react-native-paper';\n\nconst MyComponent = () => (\n  <Button icon=\"camera\" mode=\"contained\" onPress={() => console.log('Pressed')}>\n    Press me\n  </Button>\n);\n\nexport default MyComponent;\n\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"mode\nType: 'text' | 'outlined' | 'contained'\nDefault value: 'text'\nMode of the button. You can change the mode to adjust the styling to give it desired emphasis.")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"text - flat button without background or outline (low emphasis)"),(0,r.kt)("li",{parentName:"ol"},"outlined - button with an outline (medium emphasis)"),(0,r.kt)("li",{parentName:"ol"},"contained - button with a background color and elevation shadow (high emphasis)")),(0,r.kt)("h2",{id:"card"},"Card"),(0,r.kt)("p",null,"A card is a sheet of material that serves as an entry point to more detailed information."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/card-2.png",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { Avatar, Button, Card, Title, Paragraph } from 'react-native-paper';\n\nconst LeftContent = props => <Avatar.Icon {...props} icon=\"folder\" />\n\nconst MyComponent = () => (\n  <Card>\n    <Card.Title title=\"Card Title\" subtitle=\"Card Subtitle\" left={LeftContent} />\n    <Card.Content>\n      <Title>Card title</Title>\n      <Paragraph>Card content</Paragraph>\n    </Card.Content>\n    <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n    <Card.Actions>\n      <Button>Cancel</Button>\n      <Button>Ok</Button>\n    </Card.Actions>\n  </Card>\n);\n\nexport default MyComponent;\n")),(0,r.kt)("h2",{id:"checkbox"},"Checkbox"),(0,r.kt)("p",null,"Checkboxes allow the selection of multiple options from a set.\n",(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/checkbox-enabled.android.png",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { Checkbox } from 'react-native-paper';\n\nconst MyComponent = () => {\n  const [checked, setChecked] = React.useState(false);\n\n  return (\n    <Checkbox\n      status={checked ? 'checked' : 'unchecked'}\n      onPress={() => {\n        setChecked(!checked);\n      }}\n    />\n  );\n};\n\nexport default MyComponent;\n")),(0,r.kt)("h2",{id:"chip"},"Chip"),(0,r.kt)("p",null,"Chips can be used to display entities in small blocks."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/chip-1.png",alt:null})),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { Chip } from 'react-native-paper';\n\nconst MyComponent = () => (\n  <Chip icon=\"information\" onPress={() => console.log('Pressed')}>Example Chip</Chip>\n);\n\nexport default MyComponent;\n")),(0,r.kt)("h2",{id:"datatable"},"DataTable"),(0,r.kt)("p",null,"Data tables allow displaying sets of data.\n",(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/data-table.png",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { DataTable } from 'react-native-paper';\n\nconst optionsPerPage = [2, 3, 4];\n\nconst MyComponent = () => {\n  const [page, setPage] = React.useState<number>(0);\n  const [itemsPerPage, setItemsPerPage] = React.useState(optionsPerPage[0]);\n\n  React.useEffect(() => {\n    setPage(0);\n  }, [itemsPerPage]);\n\n  return (\n    <DataTable>\n      <DataTable.Header>\n        <DataTable.Title>Dessert</DataTable.Title>\n        <DataTable.Title numeric>Calories</DataTable.Title>\n        <DataTable.Title numeric>Fat</DataTable.Title>\n      </DataTable.Header>\n\n      <DataTable.Row>\n        <DataTable.Cell>Frozen yogurt</DataTable.Cell>\n        <DataTable.Cell numeric>159</DataTable.Cell>\n        <DataTable.Cell numeric>6.0</DataTable.Cell>\n      </DataTable.Row>\n\n      <DataTable.Row>\n        <DataTable.Cell>Ice cream sandwich</DataTable.Cell>\n        <DataTable.Cell numeric>237</DataTable.Cell>\n        <DataTable.Cell numeric>8.0</DataTable.Cell>\n      </DataTable.Row>\n\n      <DataTable.Pagination\n        page={page}\n        numberOfPages={3}\n        onPageChange={(page) => setPage(page)}\n        label=\"1-2 of 6\"\n        optionsPerPage={optionsPerPage}\n        itemsPerPage={itemsPerPage}\n        setItemsPerPage={setItemsPerPage}\n        showFastPagination\n        optionsLabel={'Rows per page'}\n      />\n    </DataTable>\n  );\n}\n\nexport default MyComponent;\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"mode\nType: 'flat' | 'outlined'\nDefault value: 'flat'\nMode of the chip.")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"flat - flat chip without outline."),(0,r.kt)("li",{parentName:"ol"},"outlined - chip with an outline.")),(0,r.kt)("h3",{id:"datatablerow"},"DataTableRow"),(0,r.kt)("p",null,"A component to show a single row inside of a table."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/data-table-row-cell.png",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { DataTable } from 'react-native-paper';\n\nconst MyComponent = () => (\n     <DataTable.Row>\n       <DataTable.Cell numeric>1</DataTable.Cell>\n       <DataTable.Cell numeric>2</DataTable.Cell>\n       <DataTable.Cell numeric>3</DataTable.Cell>\n       <DataTable.Cell numeric>4</DataTable.Cell>\n     </DataTable.Row>\n);\n\nexport default MyComponent;\n")),(0,r.kt)("h2",{id:"dialog"},"Dialog"),(0,r.kt)("p",null,"Dialogs inform users about a specific task and may contain critical information, require decisions, or involve multiple tasks. To render the Dialog above other components, you'll need to wrap it with the Portal component.\n",(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/dialog-2.png",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { View } from 'react-native';\nimport { Button, Paragraph, Dialog, Portal, Provider } from 'react-native-paper';\n\nconst MyComponent = () => {\n  const [visible, setVisible] = React.useState(false);\n\n  const showDialog = () => setVisible(true);\n\n  const hideDialog = () => setVisible(false);\n\n  return (\n    <Provider>\n      <View>\n        <Button onPress={showDialog}>Show Dialog</Button>\n        <Portal>\n          <Dialog visible={visible} onDismiss={hideDialog}>\n            <Dialog.Title>Alert</Dialog.Title>\n            <Dialog.Content>\n              <Paragraph>This is simple dialog</Paragraph>\n            </Dialog.Content>\n            <Dialog.Actions>\n              <Button onPress={hideDialog}>Done</Button>\n            </Dialog.Actions>\n          </Dialog>\n        </Portal>\n      </View>\n    </Provider>\n  );\n};\n\nexport default MyComponent;\n")),(0,r.kt)("h2",{id:"divider"},"Divider"),(0,r.kt)("p",null,"A divider is a thin, lightweight separator that groups content in lists and page layouts."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/divider.png",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { View } from 'react-native';\nimport { Divider, Text } from 'react-native-paper';\n\nconst MyComponent = () => (\n  <View>\n    <Text>Lemon</Text>\n    <Divider />\n    <Text>Mango</Text>\n    <Divider />\n  </View>\n);\n\nexport default MyComponent;\n")),(0,r.kt)("h2",{id:"drawer"},"Drawer"),(0,r.kt)("h3",{id:"drawersection"},"Drawer.Section"),(0,r.kt)("p",null,"A component to group content inside a navigation drawer."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/drawer-section.png",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { Drawer } from 'react-native-paper';\n\nconst MyComponent = () => {\n  const [active, setActive] = React.useState('');\n\n\n  return (\n    <Drawer.Section title=\"Some title\">\n      <Drawer.Item\n        label=\"First Item\"\n        active={active === 'first'}\n        onPress={() => setActive('first')}\n      />\n      <Drawer.Item\n        label=\"Second Item\"\n        active={active === 'second'}\n        onPress={() => setActive('second')}\n      />\n    </Drawer.Section>\n  );\n};\n\nexport default MyComponent;\n")),(0,r.kt)("h2",{id:"fab"},"FAB"),(0,r.kt)("p",null,"A floating action button represents the primary action in an application.\n",(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/fab-1.png",alt:null}),"\n",(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/fab-2.png",alt:null})),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FAB } from 'react-native-paper';\n\nconst MyComponent = () => (\n  <FAB\n    style={styles.fab}\n    small\n    icon=\"plus\"\n    onPress={() => console.log('Pressed')}\n  />\n);\n\nconst styles = StyleSheet.create({\n  fab: {\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n})\n\nexport default MyComponent;\n")),(0,r.kt)("h2",{id:"helpertext"},"HelperText"),(0,r.kt)("p",null,"Helper text is used in conjuction with input elements to provide additional hints for the user."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/helper-text.gif",alt:null})),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { View } from 'react-native';\nimport { HelperText, TextInput } from 'react-native-paper';\n\nconst MyComponent = () => {\n  const [text, setText] = React.useState('');\n\n   const onChangeText = text => setText(text);\n\n  const hasErrors = () => {\n    return !text.includes('@');\n  };\n\n return (\n    <View>\n      <TextInput label=\"Email\" value={text} onChangeText={onChangeText} />\n      <HelperText type=\"error\" visible={hasErrors()}>\n        Email address is invalid!\n      </HelperText>\n    </View>\n  );\n};\n\nexport default MyComponent;\n")),(0,r.kt)("h2",{id:"iconbutton"},"IconButton"),(0,r.kt)("p",null,"An icon button is a button which displays only an icon without a label. By default button has 150% size of the icon."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/icon-button-2.png",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { IconButton, Colors } from 'react-native-paper';\n\nconst MyComponent = () => (\n  <IconButton\n    icon=\"camera\"\n    color={Colors.red500}\n    size={20}\n    onPress={() => console.log('Pressed')}\n  />\n);\n\nexport default MyComponent;\n")),(0,r.kt)("h2",{id:"list"},"List"),(0,r.kt)("h3",{id:"listaccordion"},"List.Accordion"),(0,r.kt)("p",null,"A component used to display an expandable list item."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/list-accordion-1.png",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'import * as React from \'react\';\nimport { List } from \'react-native-paper\';\n\nconst MyComponent = () => {\n  const [expanded, setExpanded] = React.useState(true);\n\n  const handlePress = () => setExpanded(!expanded);\n\n  return (\n    <List.Section title="Accordions">\n      <List.Accordion\n        title="Uncontrolled Accordion"\n        left={props => <List.Icon {...props} icon="folder" />}>\n        <List.Item title="First item" />\n        <List.Item title="Second item" />\n      </List.Accordion>\n\n      <List.Accordion\n        title="Controlled Accordion"\n        left={props => <List.Icon {...props} icon="folder" />}\n        expanded={expanded}\n        onPress={handlePress}>\n        <List.Item title="First item" />\n        <List.Item title="Second item" />\n      </List.Accordion>\n    </List.Section>\n  );\n};\n\nexport default MyComponent;\n')),(0,r.kt)("h2",{id:"menu"},"Menu"),(0,r.kt)("p",null,"Menus display a list of choices on temporary elevated surfaces. Their placement varies based on the element that opens them."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/menu-1.png",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { View } from 'react-native';\nimport { Button, Menu, Divider, Provider } from 'react-native-paper';\n\nconst MyComponent = () => {\n  const [visible, setVisible] = React.useState(false);\n\n  const openMenu = () => setVisible(true);\n\n  const closeMenu = () => setVisible(false);\n\n  return (\n    <Provider>\n      <View\n        style={{\n          paddingTop: 50,\n          flexDirection: 'row',\n          justifyContent: 'center',\n        }}>\n        <Menu\n          visible={visible}\n          onDismiss={closeMenu}\n          anchor={<Button onPress={openMenu}>Show menu</Button>}>\n          <Menu.Item onPress={() => {}} title=\"Item 1\" />\n          <Menu.Item onPress={() => {}} title=\"Item 2\" />\n          <Divider />\n          <Menu.Item onPress={() => {}} title=\"Item 3\" />\n        </Menu>\n      </View>\n    </Provider>\n  );\n};\n\nexport default MyComponent;\n")),(0,r.kt)("h2",{id:"modal"},"Modal"),(0,r.kt)("p",null,"The Modal component is a simple way to present content above an enclosing view. To render the Modal above other components, you'll need to wrap it with the Portal component."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/modal.gif",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { Modal, Portal, Text, Button, Provider } from 'react-native-paper';\n\nconst MyComponent = () => {\n  const [visible, setVisible] = React.useState(false);\n\n  const showModal = () => setVisible(true);\n  const hideModal = () => setVisible(false);\n  const containerStyle = {backgroundColor: 'white', padding: 20};\n\n  return (\n    <Provider>\n      <Portal>\n        <Modal visible={visible} onDismiss={hideModal} contentContainerStyle={containerStyle}>\n          <Text>Example Modal.  Click outside this area to dismiss.</Text>\n        </Modal>\n      </Portal>\n      <Button style={{marginTop: 30}} onPress={showModal}>\n        Show\n      </Button>\n    </Provider>\n  );\n};\n\nexport default MyComponent;\n")),(0,r.kt)("h2",{id:"portal"},"Portal"),(0,r.kt)("p",null,"Portal allows to render a component at a different place in the parent tree. You can use it to render content which should appear above other elements, similar to Modal. It requires a Portal.Host component to be rendered somewhere in the parent tree."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { Portal, Text } from 'react-native-paper';\n\nconst MyComponent = () => (\n  <Portal>\n    <Text>This is rendered at a different place</Text>\n  </Portal>\n);\n\nexport default MyComponent;\n")),(0,r.kt)("h2",{id:"progressbar"},"ProgressBar"),(0,r.kt)("p",null,"Progress bar is an indicator used to present progress of some activity in the app."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/progress-bar.png",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { ProgressBar, Colors } from 'react-native-paper';\n\nconst MyComponent = () => (\n  <ProgressBar progress={0.5} color={Colors.red800} />\n);\n\nexport default MyComponent;\n")),(0,r.kt)("h2",{id:"radiobutton"},"RadioButton"),(0,r.kt)("p",null,"Radio buttons allow the selection a single option from a set.\n",(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/radio-enabled.android.png",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { View } from 'react-native';\nimport { RadioButton } from 'react-native-paper';\n\nconst MyComponent = () => {\n  const [checked, setChecked] = React.useState('first');\n\n  return (\n    <View>\n      <RadioButton\n        value=\"first\"\n        status={ checked === 'first' ? 'checked' : 'unchecked' }\n        onPress={() => setChecked('first')}\n      />\n      <RadioButton\n        value=\"second\"\n        status={ checked === 'second' ? 'checked' : 'unchecked' }\n        onPress={() => setChecked('second')}\n      />\n    </View>\n  );\n};\n\nexport default MyComponent;\n")),(0,r.kt)("h2",{id:"searchbar"},"Searchbar"),(0,r.kt)("p",null,"Searchbar is a simple input box where users can type search queries."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/searchbar.png",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { Searchbar } from 'react-native-paper';\n\nconst MyComponent = () => {\n  const [searchQuery, setSearchQuery] = React.useState('');\n\n  const onChangeSearch = query => setSearchQuery(query);\n\n  return (\n    <Searchbar\n      placeholder=\"Search\"\n      onChangeText={onChangeSearch}\n      value={searchQuery}\n    />\n  );\n};\n\nexport default MyComponent;\n")),(0,r.kt)("h2",{id:"snackbar"},"Snackbar"),(0,r.kt)("p",null,"Snackbars provide brief feedback about an operation through a message at the bottom of the screen. Snackbar by default uses onSurface color from theme."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/snackbar.gif",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Button, Snackbar } from 'react-native-paper';\n\nconst MyComponent = () => {\n  const [visible, setVisible] = React.useState(false);\n\n  const onToggleSnackBar = () => setVisible(!visible);\n\n  const onDismissSnackBar = () => setVisible(false);\n\n  return (\n    <View style={styles.container}>\n      <Button onPress={onToggleSnackBar}>{visible ? 'Hide' : 'Show'}</Button>\n      <Snackbar\n        visible={visible}\n        onDismiss={onDismissSnackBar}\n        action={{\n          label: 'Undo',\n          onPress: () => {\n            // Do something\n          },\n        }}>\n        Hey there! I'm a Snackbar.\n      </Snackbar>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'space-between',\n  },\n});\n\nexport default MyComponent;\n")),(0,r.kt)("h2",{id:"surface"},"Surface"),(0,r.kt)("p",null,"Surface is a basic container that can give depth to an element with elevation shadow."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/surface-2.png",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { Surface, Text } from 'react-native-paper';\nimport { StyleSheet } from 'react-native';\n\nconst MyComponent = () => (\n  <Surface style={styles.surface}>\n     <Text>Surface</Text>\n  </Surface>\n);\n\nexport default MyComponent;\n\nconst styles = StyleSheet.create({\n  surface: {\n    padding: 8,\n    height: 80,\n    width: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n    elevation: 4,\n  },\n});\n")),(0,r.kt)("h2",{id:"switch"},"Switch"),(0,r.kt)("p",null,"Switch is a visual toggle between two mutually exclusive states \u2014 on and off."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/switch-enabled.android.png",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { Switch } from 'react-native-paper';\n\nconst MyComponent = () => {\n  const [isSwitchOn, setIsSwitchOn] = React.useState(false);\n\n  const onToggleSwitch = () => setIsSwitchOn(!isSwitchOn);\n\n  return <Switch value={isSwitchOn} onValueChange={onToggleSwitch} />;\n};\n\nexport default MyComponent;\n")),(0,r.kt)("h2",{id:"textinput"},"TextInput"),(0,r.kt)("p",null,"A component to allow users to input text."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/textinput-flat.focused.png",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { TextInput } from 'react-native-paper';\n\nconst MyComponent = () => {\n  const [text, setText] = React.useState('');\n\n  return (\n    <TextInput\n      label=\"Email\"\n      value={text}\n      onChangeText={text => setText(text)}\n    />\n  );\n};\n\nexport default MyComponent;\n")),(0,r.kt)("h2",{id:"togglebutton"},"ToggleButton"),(0,r.kt)("p",null,"Toggle buttons can be used to group related options. To emphasize groups of related toggle buttons, a group should share a common container."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/toggle-button.png",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { ToggleButton } from 'react-native-paper';\n\nconst ToggleButtonExample = () => {\n  const [status, setStatus] = React.useState('checked');\n\n  const onButtonToggle = value => {\n    setStatus(status === 'checked' ? 'unchecked' : 'checked');\n  };\n\n  return (\n    <ToggleButton\n      icon=\"bluetooth\"\n      value=\"bluetooth\"\n      status={status}\n      onPress={onButtonToggle}\n    />\n  );\n};\n\nexport default ToggleButtonExample;\n")),(0,r.kt)("h3",{id:"togglebuttongroup"},"ToggleButton.Group"),(0,r.kt)("p",null,"Toggle group allows to control a group of toggle buttons.\nIt doesn't change the appearance of the toggle buttons. If you want to group them in a row, you can use ToggleButton.Row."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/toggle-button-group.gif",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'import * as React from \'react\';\nimport { ToggleButton } from \'react-native-paper\';\n\nconst MyComponent = () => {\n  const [value, setValue] = React.useState(\'left\');\n\n  return (\n    <ToggleButton.Group\n      onValueChange={value => setValue(value)}\n      value={value}>\n      <ToggleButton icon="format-align-left" value="left" />\n      <ToggleButton icon="format-align-right" value="right" />\n    </ToggleButton.Group>\n  );\n};\n\nexport default MyComponent;\n')),(0,r.kt)("h3",{id:"togglebuttonrow"},"ToggleButton.Row"),(0,r.kt)("p",null,"Toggle button row renders a group of toggle buttons in a row."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/toggle-button-row.gif",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'import * as React from \'react\';\nimport { ToggleButton } from \'react-native-paper\';\n\nconst MyComponent = () => {\n  const [value, setValue] = React.useState(\'left\');\n\n  return (\n    <ToggleButton.Row onValueChange={value => setValue(value)} value={value}>\n      <ToggleButton icon="format-align-left" value="left" />\n      <ToggleButton icon="format-align-right" value="right" />\n    </ToggleButton.Row>\n  );\n};\n\nexport default MyComponent;\n')),(0,r.kt)("h2",{id:"touchableripple"},"TouchableRipple"),(0,r.kt)("p",null,'A wrapper for views that should respond to touches. Provides a material "ink ripple" interaction effect for supported platforms (>= Android Lollipop). On unsupported platforms, it falls back to a highlight effect.'),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://callstack.github.io/react-native-paper/screenshots/touchable-ripple.gif",alt:null})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"import * as React from 'react';\nimport { View } from 'react-native';\nimport { Text, TouchableRipple } from 'react-native-paper';\n\nconst MyComponent = () => (\n  <TouchableRipple\n    onPress={() => console.log('Pressed')}\n    rippleColor=\"rgba(0, 0, 0, .32)\"\n  >\n    <Text>Press anywhere</Text>\n  </TouchableRipple>\n);\n\nexport default MyComponent;\n")))}m.isMDXComponent=!0}}]);